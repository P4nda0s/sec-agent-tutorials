
Cursor home pagedark logo

Search or ask...
⌘K
Login
Download

Forum
Get Help
Get Started
Welcome to Cursor
Installation
Migrate from VS Code
Introduction
FAQ
Editor
Tab
Agent
Composer
Ask
⌘K
AI Commit Message
Beta
Keyboard Shortcuts
Context
Codebase Indexing
Rules for AI
@ Symbols
Ignore Files
Model Context Protocol
Settings
Models
Preferences
Custom API Keys
Account
Usage
Plans
Team
Dashboard
Billing
Pricing
Privacy
Security
Troubleshooting
Common Issues
Troubleshooting Guide
Getting a Request ID
Resources
Forum
Get Started
Welcome to Cursor
AI-powered IDE with Chat, Tab, and Agent for intelligent code development

Cursor is a new, intelligent IDE, empowered by seamless integrations with AI. Built upon VSCode, Cursor is quick to learn, but can make you extraordinarily productive.

​
Get started
If you’re new to Cursor, you can get started using the guides below.

Installation
Get started with Cursor in minutes, by downloading and installing for your platform.

Migrate from VS Code
Coming from another editor? Use our migration guides to get started quickly.

​
Editor
Cursor has a number of core features that will seamlessly integrate with your workflow.
Use the links below to learn more about what Cursor can do.

Tab
Smart code completion that learns from you! Make multi-line edits, fix errors you might have missed, and predict your next action.

Agent
Your AI pair programmer for complex code changes. Make large-scale edits with precise context control and automatic fixes.

Cmd-K
Quick inline code editing and generation. Perfect for making precise changes without breaking your flow.

Chat
Context-aware AI assistant that understands your codebase. Get answers and apply code changes directly in your editor.

​
Where did Cursor come from?
Code is fundamentally text, and our tools for writing it have evolved from simple text editors into increasingly intelligent development environments.

Initially, we had features like syntax highlighting, to make code more readable. Then, we had features like autocomplete, to make code more efficient.

These have been the standard for a long time, but with Cursor, we’re re-inventing how you work with code.

​
How does it work?
Cursor provides the user with a few fundamental features that are only made possible by the development of LLMs (Large Language Models).

​
How do I get started?
You can download Cursor from the Cursor website for your platform of choice. Being based on VS Code, it’s extremely easy to get started, and all the AI features are opt-in.

You can also have Cursor import all your VS Code extensions and settings in one-click. To help you try Cursor, we have a 14-day free trial our of Pro plan, with no credit card required!

Get Started with Installation

Introduction
Learn how to use Cursor’s core features: Tab completion, Chat for code queries, and Agent for assistance

​
Overview
Cursor is a powerful AI-first code editor that enhances your development workflow. After installation, you’ll have access to these core features that work together seamlessly to make you more productive:

AI-powered code completion that understands your codebase and provides context-aware suggestions
Conversation interface for exploring, understanding, and modifying code with Ask, Edit, and Agent modes
Intelligent tools for handling complex development tasks
​
Getting Started
Start exploring Cursor’s AI-powered features:

Tab: Press Tab for intelligent code completions
CMD-K: Use Cmd/Ctrl + K for inline code edits
Composer: Use ⌘I to open the unified AI interface with Ask, Edit, and Agent modes
​
Settings
Cursor is designed to be flexible and customizable. You can configure it in two ways:

​
Cursor Settings
Access via gear icon, Cmd/Ctrl + Shift + J, or Command Palette > Cursor Settings
Configure AI features and Cursor-specific preferences
​
Editor Settings
Access via Command Palette (Cmd/Ctrl + Shift + P) > "Preferences: Open Settings (UI)"
Adjust editor behavior and appearance
Let’s explore each feature in detail:

​
Tab
Tab completion in Cursor is powered by advanced AI models that understand your code context. As you type, you’ll receive intelligent suggestions that:

Complete your current line of code
Suggest entire function implementations
Help with common patterns and boilerplate
Adapt to your coding style over time
Learn more about Tab features or see how it compares to GitHub Copilot.

​
Composer
Cursor provides a unified AI interface with three modes that seamlessly work together:

Ask Mode

Ask questions about specific code sections
Get explanations of complex functions
Find code patterns and examples
Discover and understand your codebase
Edit Mode

Make single-turn edits to your code
Apply targeted changes with precision
Review and apply changes with confidence
Work with files individually
Agent Mode (Default)

Make codebase-wide changes and refactoring
Implement new features from requirements
Debug complex issues across multiple files
Generate tests and documentation
Maintain consistency across your entire project
Switch between modes during conversations to best suit your current task. Learn more about the unified AI interface or explore specific capabilities in Agent mode.

​
Context
Context is the foundation that powers all of Cursor’s AI features. Here’s how it works:

When you open a codebase, we automatically index your code to make it available as context
Use @-symbols to precisely control what context you provide:
@files and @folders for specific paths
@web for external documentation
@git for version control context
Configure rules for AI to customize behavior
Set up MCP for external context providers
​
Models
You can see all the models we support and their pricing on the models page. Configure your API keys and preferences in Settings.

​
Usage
It’s highly recommended to read about usage and plans to understand how Cursor pricing works. Check out our pricing page for more details about plans and features.

Need help? Visit our troubleshooting guide or join our community forum.

FAQ
Frequently asked questions about Cursor’s features, language support, models, and usage


What programming languages does Cursor support?

While Cursor works with any programming language, it excels with Python and JavaScript/TypeScript due to extensive model training data. It also performs well with Swift, C, and Rust. You can enhance support for any language by adding relevant documentation to your project.


How do you keep the AI models up-to-date with latest documentation?

Cursor leverages powerful foundational models like Claude 3.5 and GPT-4. For the most current library information, you can use our @web search feature. Since core language concepts rarely change dramatically, the models maintain their effectiveness over time.


What is the purpose of the MCP server?

The MCP server serves as a bridge for bringing external context into Cursor. It enables connections to services like Google Drive and Notion, helping you incorporate documentation and requirements from these sources into your workflow.


Are there size limitations for project indexing?

Projects are limited to 10,000 files by default, though this can be adjusted if needed. To optimize indexing performance, you can use .cursorignore to exclude unnecessary files from the indexing process.


How do I share context between multiple repositories?

Currently, the simplest method is to place related repositories in the same directory and launch Cursor from there. We’re actively developing improved support for managing multiple project folders.


How do Cursor updates work?

Cursor is frequently updated with new features and improvements. You can find the latest changes and updates in our changelog at cursor.com/changelog. We regularly release updates to enhance your experience and add new capabilities.


Why haven't I received the latest release yet?

We roll out new releases gradually over multiple days to ensure stability. If you haven’t received an update yet, you can expect it to show up soon. You can also manually check for updates by opening the Command Palette (Cmd/Ctrl + Shift + P) and typing “Attempt Update”.


How can I delete my data?

You can delete your account and all associated data by going to your Dashboard and clicking the “Delete Account” button



