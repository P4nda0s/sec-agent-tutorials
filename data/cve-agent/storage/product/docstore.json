{"docstore/metadata": {"product-cursor.txt": {"doc_hash": "3a4701acfd7ae45f262eeb7f61917223286c095a40487dd30c9c33ead07f9ec9"}, "product-todesk.txt": {"doc_hash": "20b7c733b69d8735122a42f533efbdd7bf8469b22501782e35d5c7091d531d84"}, "0e9da1d8-20f0-48c8-ad7b-da4c2d3f2975": {"doc_hash": "a0c064d3c7229bbcb5964faa6971e44c2d7f8bdae3ef8d5e5cb312aec24ad39c", "ref_doc_id": "product-cursor.txt"}, "a58caba4-529f-4bff-b4fb-0bd93122e858": {"doc_hash": "8bf18f61c94d1e283e594dff27c087ea4d9413b0815703584b9003f3c92f772d", "ref_doc_id": "product-cursor.txt"}, "45343965-ae0c-4e6f-864c-009f6c1e7dcf": {"doc_hash": "0c5d1712889bf8fda7a74abf43de7d5bd9b50093c03b56d0b4fca865bbe21a0c", "ref_doc_id": "product-cursor.txt"}, "5b8413e3-a56b-4566-8ab4-2c3af8c14c1f": {"doc_hash": "7d7e522c49936b9a774960073f4cf41ea902abb1b962ddbdb46acb238fbe3ff6", "ref_doc_id": "product-cursor.txt"}, "f1d96fcd-f0a8-475b-8df7-eae5e31b5662": {"doc_hash": "efd37510f8174fb9487a56abdbd8feed7e8376745b8bea09e7bfa475eb6c7d17", "ref_doc_id": "product-todesk.txt"}, "86b9b272-75e3-4229-9d12-cd567d8340ca": {"doc_hash": "701d62c1019e4dfdcde83cef12434e2cf7e5199d46f64f7977e5d56016ae44c1", "ref_doc_id": "product-todesk.txt"}, "2d49aa70-76c8-46a3-9a88-e179f3165167": {"doc_hash": "0457f6e8aae374f8ec00a91624735c8f52b4977433f0a25b930b269378cb5e83", "ref_doc_id": "product-todesk.txt"}}, "docstore/data": {"0e9da1d8-20f0-48c8-ad7b-da4c2d3f2975": {"__data__": {"id_": "0e9da1d8-20f0-48c8-ad7b-da4c2d3f2975", "embedding": null, "metadata": {"last_modified": "2025-03-02T14:54:38", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-cursor.txt", "filetype": "text/plain"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "product-cursor.txt", "node_type": "4", "metadata": {"last_modified": "2025-03-02T14:54:38", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-cursor.txt", "filetype": "text/plain"}, "hash": "3a4701acfd7ae45f262eeb7f61917223286c095a40487dd30c9c33ead07f9ec9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a58caba4-529f-4bff-b4fb-0bd93122e858", "node_type": "1", "metadata": {}, "hash": "1d0300c072f84365eb0bc094f5dd0db616234b153459b8a025f1ac34903232b1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Cursor home pagedark logo\n\nSearch or ask...\n\n\u2318K\n\nLogin\n\nDownload\n\nForum Get Help Get Started Welcome to Cursor Installation Migrate from VS Code Introduction FAQ Editor Tab Agent Composer Ask \u2318K AI Commit Message Beta Keyboard Shortcuts Context Codebase Indexing Rules for AI @ Symbols Ignore Files Model Context Protocol Settings Models Preferences Custom API Keys Account Usage Plans Team Dashboard Billing Pricing Privacy Security Troubleshooting Common Issues Troubleshooting Guide Getting a Request ID Resources Forum Get Started Welcome to Cursor AI-powered IDE with Chat, Tab, and Agent for intelligent code development\n\nCursor is a new, intelligent IDE, empowered by seamless integrations with AI. Built upon VSCode, Cursor is quick to learn, but can make you extraordinarily productive.\n\n\u200b Get started If you\u2019re new to Cursor, you can get started using the guides below.\n\nInstallation Get started with Cursor in minutes, by downloading and installing for your platform.\n\nMigrate from VS Code Coming from another editor? Use our migration guides to get started quickly.\n\n\u200b Editor Cursor has a number of core features that will seamlessly integrate with your workflow. Use the links below to learn more about what Cursor can do.\n\nTab Smart code completion that learns from you! Make multi-line edits, fix errors you might have missed, and predict your next action.\n\nAgent Your AI pair programmer for complex code changes. Make large-scale edits with precise context control and automatic fixes.\n\nCmd-K Quick inline code editing and generation. Perfect for making precise changes without breaking your flow.\n\nChat Context-aware AI assistant that understands your codebase. Get answers and apply code changes directly in your editor.\n\n\u200b Where did Cursor come from? Code is fundamentally text, and our tools for writing it have evolved from simple text editors into increasingly intelligent development environments.\n\nInitially, we had features like syntax highlighting, to make code more readable. Then, we had features like autocomplete, to make code more efficient.\n\nThese have been the standard for a long time, but with Cursor, we\u2019re re-inventing how you work with code.\n\n\u200b How does it work? Cursor provides the user with a few fundamental features that are only made possible by the development of LLMs (Large Language Models).\n\n\u200b How do I get started?", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2362, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a58caba4-529f-4bff-b4fb-0bd93122e858": {"__data__": {"id_": "a58caba4-529f-4bff-b4fb-0bd93122e858", "embedding": null, "metadata": {"last_modified": "2025-03-02T14:54:38", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-cursor.txt", "filetype": "text/plain"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "product-cursor.txt", "node_type": "4", "metadata": {"last_modified": "2025-03-02T14:54:38", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-cursor.txt", "filetype": "text/plain"}, "hash": "3a4701acfd7ae45f262eeb7f61917223286c095a40487dd30c9c33ead07f9ec9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e9da1d8-20f0-48c8-ad7b-da4c2d3f2975", "node_type": "1", "metadata": {"last_modified": "2025-03-02T14:54:38", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-cursor.txt", "filetype": "text/plain"}, "hash": "a0c064d3c7229bbcb5964faa6971e44c2d7f8bdae3ef8d5e5cb312aec24ad39c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "45343965-ae0c-4e6f-864c-009f6c1e7dcf", "node_type": "1", "metadata": {}, "hash": "b8620f14376f003648e8bf19105a58d2479877af97d2bb558fba804f27d265ad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u200b How does it work? Cursor provides the user with a few fundamental features that are only made possible by the development of LLMs (Large Language Models).\n\n\u200b How do I get started? You can download Cursor from the Cursor website for your platform of choice. Being based on VS Code, it\u2019s extremely easy to get started, and all the AI features are opt-in.\n\nYou can also have Cursor import all your VS Code extensions and settings in one-click. To help you try Cursor, we have a 14-day free trial our of Pro plan, with no credit card required!\n\nGet Started with Installation\n\nIntroduction Learn how to use Cursor\u2019s core features: Tab completion, Chat for code queries, and Agent for assistance\n\n\u200b Overview Cursor is a powerful AI-first code editor that enhances your development workflow. After installation, you\u2019ll have access to these core features that work together seamlessly to make you more productive:\n\nAI-powered code completion that understands your codebase and provides context-aware suggestions Conversation interface for exploring, understanding, and modifying code with Ask, Edit, and Agent modes Intelligent tools for handling complex development tasks \u200b Getting Started Start exploring Cursor\u2019s AI-powered features:\n\nTab: Press Tab for intelligent code completions CMD-K: Use Cmd/Ctrl + K for inline code edits Composer: Use \u2318I to open the unified AI interface with Ask, Edit, and Agent modes \u200b Settings Cursor is designed to be flexible and customizable. You can configure it in two ways:\n\n\u200b Cursor Settings Access via gear icon, Cmd/Ctrl + Shift + J, or Command Palette > Cursor Settings Configure AI features and Cursor-specific preferences \u200b Editor Settings Access via Command Palette (Cmd/Ctrl + Shift + P) > \"Preferences: Open Settings (UI)\" Adjust editor behavior and appearance Let\u2019s explore each feature in detail:\n\n\u200b Tab Tab completion in Cursor is powered by advanced AI models that understand your code context. As you type, you\u2019ll receive intelligent suggestions that:\n\nComplete your current line of code Suggest entire function implementations Help with common patterns and boilerplate Adapt to your coding style over time Learn more about Tab features or see how it compares to GitHub Copilot.", "mimetype": "text/plain", "start_char_idx": 2181, "end_char_idx": 4404, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "45343965-ae0c-4e6f-864c-009f6c1e7dcf": {"__data__": {"id_": "45343965-ae0c-4e6f-864c-009f6c1e7dcf", "embedding": null, "metadata": {"last_modified": "2025-03-02T14:54:38", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-cursor.txt", "filetype": "text/plain"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "product-cursor.txt", "node_type": "4", "metadata": {"last_modified": "2025-03-02T14:54:38", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-cursor.txt", "filetype": "text/plain"}, "hash": "3a4701acfd7ae45f262eeb7f61917223286c095a40487dd30c9c33ead07f9ec9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a58caba4-529f-4bff-b4fb-0bd93122e858", "node_type": "1", "metadata": {"last_modified": "2025-03-02T14:54:38", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-cursor.txt", "filetype": "text/plain"}, "hash": "8bf18f61c94d1e283e594dff27c087ea4d9413b0815703584b9003f3c92f772d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b8413e3-a56b-4566-8ab4-2c3af8c14c1f", "node_type": "1", "metadata": {}, "hash": "b139130ce43ad6402b942b25ef97dee8efc7dffb9962680624e565ff94c546b6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "As you type, you\u2019ll receive intelligent suggestions that:\n\nComplete your current line of code Suggest entire function implementations Help with common patterns and boilerplate Adapt to your coding style over time Learn more about Tab features or see how it compares to GitHub Copilot.\n\n\u200b Composer Cursor provides a unified AI interface with three modes that seamlessly work together:\n\nAsk Mode\n\nAsk questions about specific code sections Get explanations of complex functions Find code patterns and examples Discover and understand your codebase Edit Mode\n\nMake single-turn edits to your code Apply targeted changes with precision Review and apply changes with confidence Work with files individually Agent Mode (Default)\n\nMake codebase-wide changes and refactoring Implement new features from requirements Debug complex issues across multiple files Generate tests and documentation Maintain consistency across your entire project Switch between modes during conversations to best suit your current task. Learn more about the unified AI interface or explore specific capabilities in Agent mode.\n\n\u200b Context Context is the foundation that powers all of Cursor\u2019s AI features. Here\u2019s how it works:\n\nWhen you open a codebase, we automatically index your code to make it available as context Use @-symbols to precisely control what context you provide: @files and @folders for specific paths @web for external documentation @git for version control context Configure rules for AI to customize behavior Set up MCP for external context providers \u200b Models You can see all the models we support and their pricing on the models page. Configure your API keys and preferences in Settings.\n\n\u200b Usage It\u2019s highly recommended to read about usage and plans to understand how Cursor pricing works. Check out our pricing page for more details about plans and features.\n\nNeed help? Visit our troubleshooting guide or join our community forum.\n\nFAQ Frequently asked questions about Cursor\u2019s features, language support, models, and usage\n\nWhat programming languages does Cursor support?\n\nWhile Cursor works with any programming language, it excels with Python and JavaScript/TypeScript due to extensive model training data. It also performs well with Swift, C, and Rust. You can enhance support for any language by adding relevant documentation to your project.\n\nHow do you keep the AI models up-to-date with latest documentation?\n\nCursor leverages powerful foundational models like Claude 3.5 and GPT-4. For the most current library information, you can use our @web search feature.", "mimetype": "text/plain", "start_char_idx": 4120, "end_char_idx": 6680, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5b8413e3-a56b-4566-8ab4-2c3af8c14c1f": {"__data__": {"id_": "5b8413e3-a56b-4566-8ab4-2c3af8c14c1f", "embedding": null, "metadata": {"last_modified": "2025-03-02T14:54:38", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-cursor.txt", "filetype": "text/plain"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "product-cursor.txt", "node_type": "4", "metadata": {"last_modified": "2025-03-02T14:54:38", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-cursor.txt", "filetype": "text/plain"}, "hash": "3a4701acfd7ae45f262eeb7f61917223286c095a40487dd30c9c33ead07f9ec9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "45343965-ae0c-4e6f-864c-009f6c1e7dcf", "node_type": "1", "metadata": {"last_modified": "2025-03-02T14:54:38", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-cursor.txt", "filetype": "text/plain"}, "hash": "0c5d1712889bf8fda7a74abf43de7d5bd9b50093c03b56d0b4fca865bbe21a0c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "How do you keep the AI models up-to-date with latest documentation?\n\nCursor leverages powerful foundational models like Claude 3.5 and GPT-4. For the most current library information, you can use our @web search feature. Since core language concepts rarely change dramatically, the models maintain their effectiveness over time.\n\nWhat is the purpose of the MCP server?\n\nThe MCP server serves as a bridge for bringing external context into Cursor. It enables connections to services like Google Drive and Notion, helping you incorporate documentation and requirements from these sources into your workflow.\n\nAre there size limitations for project indexing?\n\nProjects are limited to 10,000 files by default, though this can be adjusted if needed. To optimize indexing performance, you can use .cursorignore to exclude unnecessary files from the indexing process.\n\nHow do I share context between multiple repositories?\n\nCurrently, the simplest method is to place related repositories in the same directory and launch Cursor from there. We\u2019re actively developing improved support for managing multiple project folders.\n\nHow do Cursor updates work?\n\nCursor is frequently updated with new features and improvements. You can find the latest changes and updates in our changelog at cursor.com/changelog. We regularly release updates to enhance your experience and add new capabilities.\n\nWhy haven't I received the latest release yet?\n\nWe roll out new releases gradually over multiple days to ensure stability. If you haven\u2019t received an update yet, you can expect it to show up soon. You can also manually check for updates by opening the Command Palette (Cmd/Ctrl + Shift + P) and typing \u201cAttempt Update\u201d.\n\nHow can I delete my data?\n\nYou can delete your account and all associated data by going to your Dashboard and clicking the \u201cDelete Account\u201d button", "mimetype": "text/plain", "start_char_idx": 6460, "end_char_idx": 8306, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f1d96fcd-f0a8-475b-8df7-eae5e31b5662": {"__data__": {"id_": "f1d96fcd-f0a8-475b-8df7-eae5e31b5662", "embedding": null, "metadata": {"last_modified": "2025-03-02T14:56:32", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-todesk.txt", "filetype": "text/plain"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "product-todesk.txt", "node_type": "4", "metadata": {"last_modified": "2025-03-02T14:56:32", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-todesk.txt", "filetype": "text/plain"}, "hash": "20b7c733b69d8735122a42f533efbdd7bf8469b22501782e35d5c7091d531d84", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "86b9b272-75e3-4229-9d12-cd567d8340ca", "node_type": "1", "metadata": {}, "hash": "f7b955f93e864d085a6fe940efa048a053b2fa215a32de6964b51fe7c135fb4f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ToDesktop Logo ToDesktop Docs Changelog Blog Login Light Mode Button Electron LogoElectron Developer Introduction Getting started ToDesktop Builder Basics User Interface & Concepts Application App Icons Launch at Startup Defining Internal URLs App Protocols and Deeplinks Google OAuth Screen Download Links from your Website Working with the ToDesktop API Add Custom Code to your Desktop App Implementing App Icon Badging, Bouncing and a Progress Bar Add Browser Controls to your Desktop App Add Find in Page to your Desktop App Basic Offline Support Using Chrome Developer Tools Windows Creating Multiple Windows Communicating between windows Setting a Window's Launch Visibility Remembering Window State Changing Window Background Color Window Vibrancy (macOS Only) Make a Transparent Titlebar Draggable Window Opening Rules (`window.open`) Managing Windows Programmatically Centering a Panel Window in the Current Monitor Reacting to Keyboard Shortcuts Menus Menu Icons How to Create Dynamic Tray Menus How to Create Context Menus Dynamically Editing the Application Menu Trays Tray Icons How to Make your App \"Minimize to Tray\" on Quit Managing Trays Programmatically Building a Tray Timer Releases Configuring Auto-Updates Code Signing Certificates Development and Production Workflows Plugins ToDesktop Active Window ToDesktop Communication Server ToDesktop Exec ToDesktop File System ToDesktop Get App Icon ToDesktop IPC Communication ToDesktop Selected Text Files Bundle Files with Your Desktop App How to Interact with the File System using ToDesktop Plugins Miscellaneous Accessing Application Logs Capture Screen Contents Capture Screen Contents with loopback audio (requires ToDesktop Builder `v0.22.3` or higher) Keeping ToDesktop Applications Updated and Secure Managing Desktop Memory References Implementing Native Text Selection Behavior Reacting to Operating System Theme Preferences Triggering and Responding to Push Notifications Send Native Notifications Storing Data Using System-Appropriate Fonts Using Event Listeners Using Virtual Machines to test desktop apps on different platforms Tutorials How to Build a TodoMVC App with ToDesktop Builder How to Build a Multi-Window TodoMVC App with ToDesktop Builder How to Create Smart Deeplinks using ToDesktop Builder API app app.dock appMenu contextMenu globalShortcut menuBar nativeWindow newApp notification performance platform.electron platform.os platform.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2430, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "86b9b272-75e3-4229-9d12-cd567d8340ca": {"__data__": {"id_": "86b9b272-75e3-4229-9d12-cd567d8340ca", "embedding": null, "metadata": {"last_modified": "2025-03-02T14:56:32", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-todesk.txt", "filetype": "text/plain"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "product-todesk.txt", "node_type": "4", "metadata": {"last_modified": "2025-03-02T14:56:32", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-todesk.txt", "filetype": "text/plain"}, "hash": "20b7c733b69d8735122a42f533efbdd7bf8469b22501782e35d5c7091d531d84", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1d96fcd-f0a8-475b-8df7-eae5e31b5662", "node_type": "1", "metadata": {"last_modified": "2025-03-02T14:56:32", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-todesk.txt", "filetype": "text/plain"}, "hash": "efd37510f8174fb9487a56abdbd8feed7e8376745b8bea09e7bfa475eb6c7d17", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d49aa70-76c8-46a3-9a88-e179f3165167", "node_type": "1", "metadata": {}, "hash": "8321e1382952aec59266884e89d1c42695f80c948a7767d5ee60438bd32b7adb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "dock appMenu contextMenu globalShortcut menuBar nativeWindow newApp notification performance platform.electron platform.os platform.todesktop pushNotifications screen systemPreferences tray views webContents API Reference Introduction\n\nGetting started ToDesktop takes your web app codebase and transforms it into a cross platform desktop app with native functionality. Explore our guides and examples to integrate ToDesktop with your web app.\n\nBasics Step-by-step instructions to bootstrap your web app into a desktop app with ToDesktop Builder in just a few minutes.\n\nTutorials Demonstrative guides that show how to create advanced applications with ToDesktop Builder. We show you how to integrate plugins or custom code with your ToDesktop Builder app.\n\nRecipes Enhance your desktop app by following short guides and recipes. Recipes are designed to get you familiar with what's possible with ToDesktop Builder.\n\nAPI Reference Learn to easily customise your desktop app. Add code from our desktop APIs to your codebase and get access to system level functionality.\n\n# New to ToDesktop Builder? Start at our Basics section which will walk you through the process of creating your first ToDesktop Builder app. We'll guide you through the Builder UI and show you how to publish a cross-platform desktop app in 15 minutes.\n\nIf you want to skip the basics and dive right in, you can check out our Tutorials section. We have a collection of guides that show you how to create advanced applications with ToDesktop Builder.\n\n# Video Our video below shows you how to create a ToDesktop Builder app from scratch. It's a 3 minute video that shows you how to create a ToDo list desktop app.\n\nToDesktop Builder Basics Step-by-step instructions to bootstrap your web app into a desktop app with ToDesktop Builder in just a few minutes.\n\n# What is ToDesktop Builder? ToDesktop Builder is a desktop app that you can download and install on your computer. It allows you to create a cross-platform (Mac, Windows and Linux) desktop app from a web app.\n\nNOTE First up, you need to have a web app that you want to turn into a desktop app.\n\nThis can be a localhost web app or a web app that is hosted on a server. You can use whatever web stack or framework you want. ToDesktop Builder supports all web apps.", "mimetype": "text/plain", "start_char_idx": 2298, "end_char_idx": 4586, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2d49aa70-76c8-46a3-9a88-e179f3165167": {"__data__": {"id_": "2d49aa70-76c8-46a3-9a88-e179f3165167", "embedding": null, "metadata": {"last_modified": "2025-03-02T14:56:32", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-todesk.txt", "filetype": "text/plain"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "product-todesk.txt", "node_type": "4", "metadata": {"last_modified": "2025-03-02T14:56:32", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-todesk.txt", "filetype": "text/plain"}, "hash": "20b7c733b69d8735122a42f533efbdd7bf8469b22501782e35d5c7091d531d84", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "86b9b272-75e3-4229-9d12-cd567d8340ca", "node_type": "1", "metadata": {"last_modified": "2025-03-02T14:56:32", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-todesk.txt", "filetype": "text/plain"}, "hash": "701d62c1019e4dfdcde83cef12434e2cf7e5199d46f64f7977e5d56016ae44c1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "NOTE First up, you need to have a web app that you want to turn into a desktop app.\n\nThis can be a localhost web app or a web app that is hosted on a server. You can use whatever web stack or framework you want. ToDesktop Builder supports all web apps. # Get ToDesktop Builder Now that you know what ToDesktop Builder is, let's get it installed on your computer.\n\nDownload You can download the ToDesktop Builder installer for Mac and Windows below, or alternatively you can get it from our downloads page.\n\nDownload macOs\n\nDownload Windows Install and launch Just double-click the downloaded installer to install the app launch it.\n\nToDesktop Builder installer icon on macOS Sign up When you first open ToDesktop Builder and click the \"Get Started\" button we will open a web browser which will allow you to sign up for an account.\n\nSign up for a ToDesktop account in a web browser Create your desktop app Our onboarding process will guide you through the process of creating your first desktop app. If you're not sure what app you should create, you should probably choose \"Simple Window\" as it's the easiest way to get going. You can always add more functionality later.\n\nSign up for a ToDesktop account in a web browser # Next steps Congratulations, you have ToDesktop Builder installed and running \ud83e\udd73. Next up, here's what we recommend:\n\nExplore our application UI and concepts. Jump straight into a tutorial: How to Build a TodoMVC App with ToDesktop Builder How to Build a Multi-Window TodoMVC App with ToDesktop Builder How to Create Smart Deeplinks using ToDesktop Builder How to Make your App \"Minimize to Tray\" on Quit How to Create Dynamic Menus", "mimetype": "text/plain", "start_char_idx": 4334, "end_char_idx": 5988, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"product-cursor.txt": {"node_ids": ["0e9da1d8-20f0-48c8-ad7b-da4c2d3f2975", "a58caba4-529f-4bff-b4fb-0bd93122e858", "45343965-ae0c-4e6f-864c-009f6c1e7dcf", "5b8413e3-a56b-4566-8ab4-2c3af8c14c1f"], "metadata": {"last_modified": "2025-03-02T14:54:38", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-cursor.txt", "filetype": "text/plain"}}, "product-todesk.txt": {"node_ids": ["f1d96fcd-f0a8-475b-8df7-eae5e31b5662", "86b9b272-75e3-4229-9d12-cd567d8340ca", "2d49aa70-76c8-46a3-9a88-e179f3165167"], "metadata": {"last_modified": "2025-03-02T14:56:32", "languages": "[\"eng\"]", "file_directory": "data/cve-agent", "filename": "product-todesk.txt", "filetype": "text/plain"}}}}